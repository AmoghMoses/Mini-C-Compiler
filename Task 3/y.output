Useless nonterminals:

   identifier_array_type
   initialization_params
   initilization
   string_initilization
   array_initialization
   initialization
   string_initialization


Terminals which are not used:

   STRUCT
   MAIN
   ENDIF
   leftshift_assignment_operator
   rightshift_assignment_operator
   XOR_assignment_operator
   OR_assignment_operator
   AND_assignment_operator
   pipe_operator
   caret_operator
   amp_operator
   leftshift_operator
   rightshift_operator
   SIZEOF
   tilde_operator


Useless rules:

#15    vdi :	 identifier_array_type;
#25    identifier_array_type :	 '[' initialization_params;
#33    initialization_params :	 integer_constant ']' initialization;
#34    initialization_params :	 ']' initialization;
#35    initialization_params :	 ']' string_initialization;
#36    initilization :	 string_initilization;
#37    initilization :	 array_initialization;
#38    initilization :	;
#119   string_initilization :	 assignment_operator string_constant;
#120   array_initialization :	 assignment_operator '{' array_int_declarations '}';
#121   array_initialization :	 assignment_operator '{' array_float_declarations '}';


State 162 contains 1 reduce/reduce conflict.
State 163 contains 1 reduce/reduce conflict.
State 164 contains 1 reduce/reduce conflict.
State 215 contains 1 shift/reduce conflict.
State 232 contains 1 reduce/reduce conflict.
State 244 contains 1 reduce/reduce conflict.

Grammar
rule 1    program -> declaration_list
rule 2    declaration_list -> declaration D
rule 3    D -> declaration_list
rule 4    D ->		/* empty */
rule 5    declaration -> variable_declaration
rule 6    declaration -> function_declaration
rule 7    variable_declaration -> type_specifier variable_declaration_list ';'
rule 8    variable_declaration_list -> variable_declaration_identifier V
rule 9    V -> ',' variable_declaration_list
rule 10   V ->		/* empty */
rule 11   @1 ->		/* empty */
rule 12   variable_declaration_identifier -> identifier @1 vdi
rule 13   @2 ->		/* empty */
rule 14   variable_declaration_identifier -> array_identifier @2 vdi
rule 16   vdi -> identifier_twod_array_type
rule 17   vdi -> assignment_operator expression
rule 18   vdi ->		/* empty */
rule 19   array_random_access -> array_identifier '[' array_random_access_breakup ']'
rule 20   array_random_access -> array_identifier '[' array_random_access_breakup ']' '[' array_random_access_breakup ']'
rule 21   array_random_access_breakup -> integer_constant
rule 22   array_random_access_breakup -> identifier
rule 23   array_random_access_breakup -> array_random_access
rule 24   array_random_access_breakup -> expression
rule 26   identifier_twod_array_type -> '[' integer_constant ']' '[' initialization_params_new
rule 27   identifier_twod_array_type -> '[' identifier ']' '[' initialization_params_new
rule 28   identifier_twod_array_type -> '[' ']' '[' initialization_params_new
rule 29   initialization_params_new -> initialization_params_2d ']' initialization_2d
rule 30   initialization_params_new -> initialization_params_2d ']'
rule 31   initialization_params_2d -> integer_constant
rule 32   initialization_params_2d -> identifier
rule 39   initialization_2d -> assignment_operator '{' array_init_int_2d '}'
rule 40   initialization_2d -> assignment_operator '{' array_init_float_2d '}'
rule 41   initialization_2d -> assignment_operator '{' array_init_string_2d '}'
rule 42   array_init_int_2d -> '{' array_int_declarations '}' ',' array_init_int_2d
rule 43   array_init_int_2d -> '{' array_int_declarations '}'
rule 44   array_init_int_2d -> integer_constant
rule 45   array_init_float_2d -> '{' array_float_declarations '}' ',' array_init_float_2d
rule 46   array_init_float_2d -> '{' array_float_declarations '}'
rule 47   array_init_float_2d -> integer_constant
rule 48   array_init_float_2d -> float_constant
rule 49   array_init_string_2d -> string_constant ',' array_init_string_2d
rule 50   array_init_string_2d -> string_constant
rule 51   type_specifier -> INT
rule 52   type_specifier -> CHAR
rule 53   type_specifier -> FLOAT
rule 54   type_specifier -> DOUBLE
rule 55   type_specifier -> LONG long_grammar
rule 56   type_specifier -> SHORT short_grammar
rule 57   type_specifier -> UNSIGNED unsigned_grammar
rule 58   type_specifier -> SIGNED signed_grammar
rule 59   type_specifier -> VOID
rule 60   unsigned_grammar -> INT
rule 61   unsigned_grammar -> LONG long_grammar
rule 62   unsigned_grammar -> SHORT short_grammar
rule 63   unsigned_grammar ->		/* empty */
rule 64   signed_grammar -> INT
rule 65   signed_grammar -> LONG long_grammar
rule 66   signed_grammar -> SHORT short_grammar
rule 67   signed_grammar ->		/* empty */
rule 68   long_grammar -> INT
rule 69   long_grammar ->		/* empty */
rule 70   short_grammar -> INT
rule 71   short_grammar ->		/* empty */
rule 72   function_declaration -> function_declaration_type function_declaration_param_statement
rule 73   function_declaration_type -> type_specifier identifier '('
rule 74   function_declaration_param_statement -> params ')' statement
rule 75   params -> parameters_list
rule 76   params ->		/* empty */
rule 77   @3 ->		/* empty */
rule 78   parameters_list -> type_specifier @3 parameters_identifier_list
rule 79   parameters_identifier_list -> param_identifier parameters_identifier_list_breakup
rule 80   parameters_identifier_list_breakup -> ',' parameters_list
rule 81   parameters_identifier_list_breakup ->		/* empty */
rule 82   @4 ->		/* empty */
rule 83   param_identifier -> identifier @4 param_identifier_breakup
rule 84   param_identifier_breakup -> '[' ']'
rule 85   param_identifier_breakup ->		/* empty */
rule 86   statement -> expression_statment
rule 87   statement -> compound_statement
rule 88   statement -> conditional_statements
rule 89   statement -> iterative_statements
rule 90   statement -> return_statement
rule 91   statement -> break_statement
rule 92   statement -> continue_statement
rule 93   statement -> variable_declaration
rule 94   statement -> printf_statement
rule 95   @5 ->		/* empty */
rule 96   compound_statement -> @5 '{' statment_list '}'
rule 97   statment_list -> statement statment_list
rule 98   statment_list ->		/* empty */
rule 99   expression_statment -> expression ';'
rule 100  expression_statment -> ';'
rule 101  @6 ->		/* empty */
rule 102  conditional_statements -> IF '(' simple_expression ')' @6 statement conditional_statements_breakup
rule 103  conditional_statements_breakup -> ELSE statement
rule 104  conditional_statements_breakup ->		/* empty */
rule 105  @7 ->		/* empty */
rule 106  iterative_statements -> WHILE '(' simple_expression ')' @7 statement
rule 107  @8 ->		/* empty */
rule 108  iterative_statements -> FOR '(' expression ';' simple_expression ';' @8 expression ')'
rule 109  @9 ->		/* empty */
rule 110  iterative_statements -> DO statement WHILE '(' simple_expression ')' @9 ';'
rule 111  return_statement -> RETURN ';'
rule 112  return_statement -> RETURN expression ';'
rule 113  printf_statement -> PRINTF '(' string_constant printf_identifier_list ')' ';'
rule 114  printf_identifier_list -> ',' identifier printf_identifier_list
rule 115  printf_identifier_list -> ',' array_random_access printf_identifier_list
rule 116  printf_identifier_list ->		/* empty */
rule 117  continue_statement -> CONTINUE ';'
rule 118  break_statement -> BREAK ';'
rule 122  array_int_declarations -> integer_constant array_int_declarations_breakup
rule 123  array_float_declarations -> float_constant array_float_declarations_breakup
rule 124  array_float_declarations -> integer_constant array_float_declarations_breakup
rule 125  array_int_declarations_breakup -> ',' array_int_declarations
rule 126  array_int_declarations_breakup ->		/* empty */
rule 127  array_float_declarations_breakup -> ',' array_float_declarations
rule 128  array_float_declarations_breakup ->		/* empty */
rule 129  expression -> mutable assignment_operator expression
rule 130  expression -> mutable addition_assignment_operator expression
rule 131  expression -> mutable subtraction_assignment_operator expression
rule 132  expression -> mutable multiplication_assignment_operator expression
rule 133  expression -> mutable division_assignment_operator expression
rule 134  expression -> mutable modulo_assignment_operator expression
rule 135  expression -> mutable increment_operator
rule 136  expression -> mutable decrement_operator
rule 137  expression -> simple_expression
rule 138  simple_expression -> simple_expression OR_operator and_expression
rule 139  simple_expression -> and_expression
rule 140  and_expression -> and_expression AND_operator unary_relation_expression
rule 141  and_expression -> unary_relation_expression
rule 142  unary_relation_expression -> exclamation_operator unary_relation_expression
rule 143  unary_relation_expression -> regular_expression
rule 144  regular_expression -> regular_expression relational_operators sum_expression
rule 145  regular_expression -> sum_expression
rule 146  relational_operators -> greaterthan_assignment_operator
rule 147  relational_operators -> lessthan_assignment_operator
rule 148  relational_operators -> greaterthan_operator
rule 149  relational_operators -> lessthan_operator
rule 150  relational_operators -> equality_operator
rule 151  relational_operators -> inequality_operator
rule 152  sum_expression -> sum_expression sum_operators term
rule 153  sum_expression -> term
rule 154  sum_operators -> add_operator
rule 155  sum_operators -> subtract_operator
rule 156  term -> term MULOP factor
rule 157  term -> factor
rule 158  MULOP -> multiplication_operator
rule 159  MULOP -> division_operator
rule 160  MULOP -> modulo_operator
rule 161  factor -> immutable
rule 162  factor -> mutable
rule 163  mutable -> identifier
rule 164  mutable -> array_random_access
rule 165  immutable -> '(' expression ')'
rule 166  immutable -> call
rule 167  immutable -> constant
rule 168  @10 ->		/* empty */
rule 169  call -> identifier '(' @10 arguments ')'
rule 170  arguments -> arguments_list
rule 171  arguments ->		/* empty */
rule 172  @11 ->		/* empty */
rule 173  arguments_list -> expression @11 A
rule 174  @12 ->		/* empty */
rule 175  A -> ',' expression @12 A
rule 176  A ->		/* empty */
rule 177  constant -> integer_constant
rule 178  constant -> string_constant
rule 179  constant -> float_constant
rule 180  constant -> character_constant

Terminals, with rules where they appear

$ (-1)
'(' (40) 73 102 106 108 110 113 165 169
')' (41) 74 102 106 108 110 113 165 169
',' (44) 9 42 45 49 80 114 115 125 127 175
';' (59) 7 99 100 108 110 111 112 113 117 118
'[' (91) 19 20 25 26 27 28 84
']' (93) 19 20 26 27 28 29 30 33 34 35 84
'{' (123) 39 40 41 42 43 45 46 96 120 121
'}' (125) 39 40 41 42 43 45 46 96 120 121
error (256)
IF (258) 102
INT (259) 51 60 64 68 70
CHAR (260) 52
FLOAT (261) 53
DOUBLE (262) 54
LONG (263) 55 61 65
SHORT (264) 56 62 66
SIGNED (265) 58
UNSIGNED (266) 57
STRUCT (267)
RETURN (268) 111 112
MAIN (269)
VOID (270) 59
WHILE (271) 106 110
FOR (272) 108
DO (273) 110
BREAK (274) 118
PRINTF (275) 113
CONTINUE (276) 117
ENDIF (277)
identifier (278) 12 22 27 32 73 83 114 163 169
array_identifier (279) 14 19 20
integer_constant (280) 21 26 31 33 44 47 122 124 177
string_constant (281) 49 50 113 119 178
float_constant (282) 48 123 179
character_constant (283) 180
ELSE (284) 103
leftshift_assignment_operator (285)
rightshift_assignment_operator (286)
XOR_assignment_operator (287)
OR_assignment_operator (288)
AND_assignment_operator (289)
modulo_assignment_operator (290) 134
multiplication_assignment_operator (291) 132
division_assignment_operator (292) 133
addition_assignment_operator (293) 130
subtraction_assignment_operator (294) 131
assignment_operator (295) 17 39 40 41 119 120 121 129
OR_operator (296) 138
AND_operator (297) 140
pipe_operator (298)
caret_operator (299)
amp_operator (300)
equality_operator (301) 150
inequality_operator (302) 151
lessthan_assignment_operator (303) 147
lessthan_operator (304) 149
greaterthan_assignment_operator (305) 146
greaterthan_operator (306) 148
leftshift_operator (307)
rightshift_operator (308)
add_operator (309) 154
subtract_operator (310) 155
multiplication_operator (311) 158
division_operator (312) 159
modulo_operator (313) 160
SIZEOF (314)
tilde_operator (315)
exclamation_operator (316) 142
increment_operator (317) 135
decrement_operator (318) 136

Nonterminals, with rules where they appear

program (72)
    on left: 1
declaration_list (73)
    on left: 2, on right: 1 3
D (74)
    on left: 3 4, on right: 2
declaration (75)
    on left: 5 6, on right: 2
variable_declaration (76)
    on left: 7, on right: 5 93
variable_declaration_list (77)
    on left: 8, on right: 7 9
V (78)
    on left: 9 10, on right: 8
variable_declaration_identifier (79)
    on left: 12 14, on right: 8
@1 (80)
    on left: 11, on right: 12
@2 (81)
    on left: 13, on right: 14
vdi (82)
    on left: 16 17 18, on right: 12 14
array_random_access (83)
    on left: 19 20, on right: 23 115 164
array_random_access_breakup (84)
    on left: 21 22 23 24, on right: 19 20
identifier_twod_array_type (85)
    on left: 26 27 28, on right: 16
initialization_params_new (86)
    on left: 29 30, on right: 26 27 28
initialization_params_2d (87)
    on left: 31 32, on right: 29 30
initialization_2d (88)
    on left: 39 40 41, on right: 29
array_init_int_2d (89)
    on left: 42 43 44, on right: 39 42
array_init_float_2d (90)
    on left: 45 46 47 48, on right: 40 45
array_init_string_2d (91)
    on left: 49 50, on right: 41 49
type_specifier (92)
    on left: 51 52 53 54 55 56 57 58 59, on right: 7 73 78
unsigned_grammar (93)
    on left: 60 61 62 63, on right: 57
signed_grammar (94)
    on left: 64 65 66 67, on right: 58
long_grammar (95)
    on left: 68 69, on right: 55 61 65
short_grammar (96)
    on left: 70 71, on right: 56 62 66
function_declaration (97)
    on left: 72, on right: 6
function_declaration_type (98)
    on left: 73, on right: 72
function_declaration_param_statement (99)
    on left: 74, on right: 72
params (100)
    on left: 75 76, on right: 74
parameters_list (101)
    on left: 78, on right: 75 80
@3 (102)
    on left: 77, on right: 78
parameters_identifier_list (103)
    on left: 79, on right: 78
parameters_identifier_list_breakup (104)
    on left: 80 81, on right: 79
param_identifier (105)
    on left: 83, on right: 79
@4 (106)
    on left: 82, on right: 83
param_identifier_breakup (107)
    on left: 84 85, on right: 83
statement (108)
    on left: 86 87 88 89 90 91 92 93 94, on right: 74 97 102 103 106
    110
compound_statement (109)
    on left: 96, on right: 87
@5 (110)
    on left: 95, on right: 96
statment_list (111)
    on left: 97 98, on right: 96 97
expression_statment (112)
    on left: 99 100, on right: 86
conditional_statements (113)
    on left: 102, on right: 88
@6 (114)
    on left: 101, on right: 102
conditional_statements_breakup (115)
    on left: 103 104, on right: 102
iterative_statements (116)
    on left: 106 108 110, on right: 89
@7 (117)
    on left: 105, on right: 106
@8 (118)
    on left: 107, on right: 108
@9 (119)
    on left: 109, on right: 110
return_statement (120)
    on left: 111 112, on right: 90
printf_statement (121)
    on left: 113, on right: 94
printf_identifier_list (122)
    on left: 114 115 116, on right: 113 114 115
continue_statement (123)
    on left: 117, on right: 92
break_statement (124)
    on left: 118, on right: 91
array_int_declarations (125)
    on left: 122, on right: 42 43 120 125
array_float_declarations (126)
    on left: 123 124, on right: 45 46 121 127
array_int_declarations_breakup (127)
    on left: 125 126, on right: 122
array_float_declarations_breakup (128)
    on left: 127 128, on right: 123 124
expression (129)
    on left: 129 130 131 132 133 134 135 136 137, on right: 17 24 99
    108 112 129 130 131 132 133 134 165 173 175
simple_expression (130)
    on left: 138 139, on right: 102 106 108 110 137 138
and_expression (131)
    on left: 140 141, on right: 138 139 140
unary_relation_expression (132)
    on left: 142 143, on right: 140 141 142
regular_expression (133)
    on left: 144 145, on right: 143 144
relational_operators (134)
    on left: 146 147 148 149 150 151, on right: 144
sum_expression (135)
    on left: 152 153, on right: 144 145 152
sum_operators (136)
    on left: 154 155, on right: 152
term (137)
    on left: 156 157, on right: 152 153 156
MULOP (138)
    on left: 158 159 160, on right: 156
factor (139)
    on left: 161 162, on right: 156 157
mutable (140)
    on left: 163 164, on right: 129 130 131 132 133 134 135 136 162
immutable (141)
    on left: 165 166 167, on right: 161
call (142)
    on left: 169, on right: 166
@10 (143)
    on left: 168, on right: 169
arguments (144)
    on left: 170 171, on right: 169
arguments_list (145)
    on left: 173, on right: 170
@11 (146)
    on left: 172, on right: 173
A (147)
    on left: 175 176, on right: 173 175
@12 (148)
    on left: 174, on right: 175
constant (149)
    on left: 177 178 179 180, on right: 167


state 0

    INT 	shift, and go to state 1
    CHAR	shift, and go to state 2
    FLOAT	shift, and go to state 3
    DOUBLE	shift, and go to state 4
    LONG	shift, and go to state 5
    SHORT	shift, and go to state 6
    SIGNED	shift, and go to state 7
    UNSIGNED	shift, and go to state 8
    VOID	shift, and go to state 9

    program	go to state 274
    declaration_list	go to state 10
    declaration	go to state 11
    variable_declaration	go to state 12
    type_specifier	go to state 13
    function_declaration	go to state 14
    function_declaration_type	go to state 15



state 1

    type_specifier  ->  INT .   (rule 51)

    $default	reduce using rule 51 (type_specifier)



state 2

    type_specifier  ->  CHAR .   (rule 52)

    $default	reduce using rule 52 (type_specifier)



state 3

    type_specifier  ->  FLOAT .   (rule 53)

    $default	reduce using rule 53 (type_specifier)



state 4

    type_specifier  ->  DOUBLE .   (rule 54)

    $default	reduce using rule 54 (type_specifier)



state 5

    type_specifier  ->  LONG . long_grammar   (rule 55)

    INT 	shift, and go to state 16

    $default	reduce using rule 69 (long_grammar)

    long_grammar	go to state 17



state 6

    type_specifier  ->  SHORT . short_grammar   (rule 56)

    INT 	shift, and go to state 18

    $default	reduce using rule 71 (short_grammar)

    short_grammar	go to state 19



state 7

    type_specifier  ->  SIGNED . signed_grammar   (rule 58)

    INT 	shift, and go to state 20
    LONG	shift, and go to state 21
    SHORT	shift, and go to state 22

    $default	reduce using rule 67 (signed_grammar)

    signed_grammar	go to state 23



state 8

    type_specifier  ->  UNSIGNED . unsigned_grammar   (rule 57)

    INT 	shift, and go to state 24
    LONG	shift, and go to state 25
    SHORT	shift, and go to state 26

    $default	reduce using rule 63 (unsigned_grammar)

    unsigned_grammar	go to state 27



state 9

    type_specifier  ->  VOID .   (rule 59)

    $default	reduce using rule 59 (type_specifier)



state 10

    program  ->  declaration_list .   (rule 1)

    $default	reduce using rule 1 (program)



state 11

    declaration_list  ->  declaration . D   (rule 2)

    INT 	shift, and go to state 1
    CHAR	shift, and go to state 2
    FLOAT	shift, and go to state 3
    DOUBLE	shift, and go to state 4
    LONG	shift, and go to state 5
    SHORT	shift, and go to state 6
    SIGNED	shift, and go to state 7
    UNSIGNED	shift, and go to state 8
    VOID	shift, and go to state 9

    $default	reduce using rule 4 (D)

    declaration_list	go to state 28
    D   	go to state 29
    declaration	go to state 11
    variable_declaration	go to state 12
    type_specifier	go to state 13
    function_declaration	go to state 14
    function_declaration_type	go to state 15



state 12

    declaration  ->  variable_declaration .   (rule 5)

    $default	reduce using rule 5 (declaration)



state 13

    variable_declaration  ->  type_specifier . variable_declaration_list ';'   (rule 7)
    function_declaration_type  ->  type_specifier . identifier '('   (rule 73)

    identifier	shift, and go to state 30
    array_identifier	shift, and go to state 31

    variable_declaration_list	go to state 32
    variable_declaration_identifier	go to state 33



state 14

    declaration  ->  function_declaration .   (rule 6)

    $default	reduce using rule 6 (declaration)



state 15

    function_declaration  ->  function_declaration_type . function_declaration_param_statement   (rule 72)

    INT 	shift, and go to state 1
    CHAR	shift, and go to state 2
    FLOAT	shift, and go to state 3
    DOUBLE	shift, and go to state 4
    LONG	shift, and go to state 5
    SHORT	shift, and go to state 6
    SIGNED	shift, and go to state 7
    UNSIGNED	shift, and go to state 8
    VOID	shift, and go to state 9

    $default	reduce using rule 76 (params)

    type_specifier	go to state 34
    function_declaration_param_statement	go to state 35
    params	go to state 36
    parameters_list	go to state 37



state 16

    long_grammar  ->  INT .   (rule 68)

    $default	reduce using rule 68 (long_grammar)



state 17

    type_specifier  ->  LONG long_grammar .   (rule 55)

    $default	reduce using rule 55 (type_specifier)



state 18

    short_grammar  ->  INT .   (rule 70)

    $default	reduce using rule 70 (short_grammar)



state 19

    type_specifier  ->  SHORT short_grammar .   (rule 56)

    $default	reduce using rule 56 (type_specifier)



state 20

    signed_grammar  ->  INT .   (rule 64)

    $default	reduce using rule 64 (signed_grammar)



state 21

    signed_grammar  ->  LONG . long_grammar   (rule 65)

    INT 	shift, and go to state 16

    $default	reduce using rule 69 (long_grammar)

    long_grammar	go to state 38



state 22

    signed_grammar  ->  SHORT . short_grammar   (rule 66)

    INT 	shift, and go to state 18

    $default	reduce using rule 71 (short_grammar)

    short_grammar	go to state 39



state 23

    type_specifier  ->  SIGNED signed_grammar .   (rule 58)

    $default	reduce using rule 58 (type_specifier)



state 24

    unsigned_grammar  ->  INT .   (rule 60)

    $default	reduce using rule 60 (unsigned_grammar)



state 25

    unsigned_grammar  ->  LONG . long_grammar   (rule 61)

    INT 	shift, and go to state 16

    $default	reduce using rule 69 (long_grammar)

    long_grammar	go to state 40



state 26

    unsigned_grammar  ->  SHORT . short_grammar   (rule 62)

    INT 	shift, and go to state 18

    $default	reduce using rule 71 (short_grammar)

    short_grammar	go to state 41



state 27

    type_specifier  ->  UNSIGNED unsigned_grammar .   (rule 57)

    $default	reduce using rule 57 (type_specifier)



state 28

    D  ->  declaration_list .   (rule 3)

    $default	reduce using rule 3 (D)



state 29

    declaration_list  ->  declaration D .   (rule 2)

    $default	reduce using rule 2 (declaration_list)



state 30

    variable_declaration_identifier  ->  identifier . @1 vdi   (rule 12)
    function_declaration_type  ->  type_specifier identifier . '('   (rule 73)

    '(' 	shift, and go to state 42

    $default	reduce using rule 11 (@1)

    @1  	go to state 43



state 31

    variable_declaration_identifier  ->  array_identifier . @2 vdi   (rule 14)

    $default	reduce using rule 13 (@2)

    @2  	go to state 44



state 32

    variable_declaration  ->  type_specifier variable_declaration_list . ';'   (rule 7)

    ';' 	shift, and go to state 45



state 33

    variable_declaration_list  ->  variable_declaration_identifier . V   (rule 8)

    ',' 	shift, and go to state 46

    $default	reduce using rule 10 (V)

    V   	go to state 47



state 34

    parameters_list  ->  type_specifier . @3 parameters_identifier_list   (rule 78)

    $default	reduce using rule 77 (@3)

    @3  	go to state 48



state 35

    function_declaration  ->  function_declaration_type function_declaration_param_statement .   (rule 72)

    $default	reduce using rule 72 (function_declaration)



state 36

    function_declaration_param_statement  ->  params . ')' statement   (rule 74)

    ')' 	shift, and go to state 49



state 37

    params  ->  parameters_list .   (rule 75)

    $default	reduce using rule 75 (params)



state 38

    signed_grammar  ->  LONG long_grammar .   (rule 65)

    $default	reduce using rule 65 (signed_grammar)



state 39

    signed_grammar  ->  SHORT short_grammar .   (rule 66)

    $default	reduce using rule 66 (signed_grammar)



state 40

    unsigned_grammar  ->  LONG long_grammar .   (rule 61)

    $default	reduce using rule 61 (unsigned_grammar)



state 41

    unsigned_grammar  ->  SHORT short_grammar .   (rule 62)

    $default	reduce using rule 62 (unsigned_grammar)



state 42

    function_declaration_type  ->  type_specifier identifier '(' .   (rule 73)

    $default	reduce using rule 73 (function_declaration_type)



state 43

    variable_declaration_identifier  ->  identifier @1 . vdi   (rule 12)

    assignment_operator	shift, and go to state 50
    '[' 	shift, and go to state 51

    $default	reduce using rule 18 (vdi)

    vdi 	go to state 52
    identifier_twod_array_type	go to state 53



state 44

    variable_declaration_identifier  ->  array_identifier @2 . vdi   (rule 14)

    assignment_operator	shift, and go to state 50
    '[' 	shift, and go to state 51

    $default	reduce using rule 18 (vdi)

    vdi 	go to state 54
    identifier_twod_array_type	go to state 53



state 45

    variable_declaration  ->  type_specifier variable_declaration_list ';' .   (rule 7)

    $default	reduce using rule 7 (variable_declaration)



state 46

    V  ->  ',' . variable_declaration_list   (rule 9)

    identifier	shift, and go to state 55
    array_identifier	shift, and go to state 31

    variable_declaration_list	go to state 56
    variable_declaration_identifier	go to state 33



state 47

    variable_declaration_list  ->  variable_declaration_identifier V .   (rule 8)

    $default	reduce using rule 8 (variable_declaration_list)



state 48

    parameters_list  ->  type_specifier @3 . parameters_identifier_list   (rule 78)

    identifier	shift, and go to state 57

    parameters_identifier_list	go to state 58
    param_identifier	go to state 59



state 49

    function_declaration_param_statement  ->  params ')' . statement   (rule 74)

    IF  	shift, and go to state 60
    INT 	shift, and go to state 1
    CHAR	shift, and go to state 2
    FLOAT	shift, and go to state 3
    DOUBLE	shift, and go to state 4
    LONG	shift, and go to state 5
    SHORT	shift, and go to state 6
    SIGNED	shift, and go to state 7
    UNSIGNED	shift, and go to state 8
    RETURN	shift, and go to state 61
    VOID	shift, and go to state 9
    WHILE	shift, and go to state 62
    FOR 	shift, and go to state 63
    DO  	shift, and go to state 64
    BREAK	shift, and go to state 65
    PRINTF	shift, and go to state 66
    CONTINUE	shift, and go to state 67
    identifier	shift, and go to state 68
    array_identifier	shift, and go to state 69
    integer_constant	shift, and go to state 70
    string_constant	shift, and go to state 71
    float_constant	shift, and go to state 72
    character_constant	shift, and go to state 73
    exclamation_operator	shift, and go to state 74
    ';' 	shift, and go to state 75
    '(' 	shift, and go to state 76

    $default	reduce using rule 95 (@5)

    variable_declaration	go to state 77
    array_random_access	go to state 78
    type_specifier	go to state 79
    statement	go to state 80
    compound_statement	go to state 81
    @5  	go to state 82
    expression_statment	go to state 83
    conditional_statements	go to state 84
    iterative_statements	go to state 85
    return_statement	go to state 86
    printf_statement	go to state 87
    continue_statement	go to state 88
    break_statement	go to state 89
    expression	go to state 90
    simple_expression	go to state 91
    and_expression	go to state 92
    unary_relation_expression	go to state 93
    regular_expression	go to state 94
    sum_expression	go to state 95
    term	go to state 96
    factor	go to state 97
    mutable	go to state 98
    immutable	go to state 99
    call	go to state 100
    constant	go to state 101



state 50

    vdi  ->  assignment_operator . expression   (rule 17)

    identifier	shift, and go to state 68
    array_identifier	shift, and go to state 69
    integer_constant	shift, and go to state 70
    string_constant	shift, and go to state 71
    float_constant	shift, and go to state 72
    character_constant	shift, and go to state 73
    exclamation_operator	shift, and go to state 74
    '(' 	shift, and go to state 76

    array_random_access	go to state 78
    expression	go to state 102
    simple_expression	go to state 91
    and_expression	go to state 92
    unary_relation_expression	go to state 93
    regular_expression	go to state 94
    sum_expression	go to state 95
    term	go to state 96
    factor	go to state 97
    mutable	go to state 98
    immutable	go to state 99
    call	go to state 100
    constant	go to state 101



state 51

    identifier_twod_array_type  ->  '[' . integer_constant ']' '[' initialization_params_new   (rule 26)
    identifier_twod_array_type  ->  '[' . identifier ']' '[' initialization_params_new   (rule 27)
    identifier_twod_array_type  ->  '[' . ']' '[' initialization_params_new   (rule 28)

    identifier	shift, and go to state 103
    integer_constant	shift, and go to state 104
    ']' 	shift, and go to state 105



state 52

    variable_declaration_identifier  ->  identifier @1 vdi .   (rule 12)

    $default	reduce using rule 12 (variable_declaration_identifier)



state 53

    vdi  ->  identifier_twod_array_type .   (rule 16)

    $default	reduce using rule 16 (vdi)



state 54

    variable_declaration_identifier  ->  array_identifier @2 vdi .   (rule 14)

    $default	reduce using rule 14 (variable_declaration_identifier)



state 55

    variable_declaration_identifier  ->  identifier . @1 vdi   (rule 12)

    $default	reduce using rule 11 (@1)

    @1  	go to state 43



state 56

    V  ->  ',' variable_declaration_list .   (rule 9)

    $default	reduce using rule 9 (V)



state 57

    param_identifier  ->  identifier . @4 param_identifier_breakup   (rule 83)

    $default	reduce using rule 82 (@4)

    @4  	go to state 106



state 58

    parameters_list  ->  type_specifier @3 parameters_identifier_list .   (rule 78)

    $default	reduce using rule 78 (parameters_list)



state 59

    parameters_identifier_list  ->  param_identifier . parameters_identifier_list_breakup   (rule 79)

    ',' 	shift, and go to state 107

    $default	reduce using rule 81 (parameters_identifier_list_breakup)

    parameters_identifier_list_breakup	go to state 108



state 60

    conditional_statements  ->  IF . '(' simple_expression ')' @6 statement conditional_statements_breakup   (rule 102)

    '(' 	shift, and go to state 109



state 61

    return_statement  ->  RETURN . ';'   (rule 111)
    return_statement  ->  RETURN . expression ';'   (rule 112)

    identifier	shift, and go to state 68
    array_identifier	shift, and go to state 69
    integer_constant	shift, and go to state 70
    string_constant	shift, and go to state 71
    float_constant	shift, and go to state 72
    character_constant	shift, and go to state 73
    exclamation_operator	shift, and go to state 74
    ';' 	shift, and go to state 110
    '(' 	shift, and go to state 76

    array_random_access	go to state 78
    expression	go to state 111
    simple_expression	go to state 91
    and_expression	go to state 92
    unary_relation_expression	go to state 93
    regular_expression	go to state 94
    sum_expression	go to state 95
    term	go to state 96
    factor	go to state 97
    mutable	go to state 98
    immutable	go to state 99
    call	go to state 100
    constant	go to state 101



state 62

    iterative_statements  ->  WHILE . '(' simple_expression ')' @7 statement   (rule 106)

    '(' 	shift, and go to state 112



state 63

    iterative_statements  ->  FOR . '(' expression ';' simple_expression ';' @8 expression ')'   (rule 108)

    '(' 	shift, and go to state 113



state 64

    iterative_statements  ->  DO . statement WHILE '(' simple_expression ')' @9 ';'   (rule 110)

    IF  	shift, and go to state 60
    INT 	shift, and go to state 1
    CHAR	shift, and go to state 2
    FLOAT	shift, and go to state 3
    DOUBLE	shift, and go to state 4
    LONG	shift, and go to state 5
    SHORT	shift, and go to state 6
    SIGNED	shift, and go to state 7
    UNSIGNED	shift, and go to state 8
    RETURN	shift, and go to state 61
    VOID	shift, and go to state 9
    WHILE	shift, and go to state 62
    FOR 	shift, and go to state 63
    DO  	shift, and go to state 64
    BREAK	shift, and go to state 65
    PRINTF	shift, and go to state 66
    CONTINUE	shift, and go to state 67
    identifier	shift, and go to state 68
    array_identifier	shift, and go to state 69
    integer_constant	shift, and go to state 70
    string_constant	shift, and go to state 71
    float_constant	shift, and go to state 72
    character_constant	shift, and go to state 73
    exclamation_operator	shift, and go to state 74
    ';' 	shift, and go to state 75
    '(' 	shift, and go to state 76

    $default	reduce using rule 95 (@5)

    variable_declaration	go to state 77
    array_random_access	go to state 78
    type_specifier	go to state 79
    statement	go to state 114
    compound_statement	go to state 81
    @5  	go to state 82
    expression_statment	go to state 83
    conditional_statements	go to state 84
    iterative_statements	go to state 85
    return_statement	go to state 86
    printf_statement	go to state 87
    continue_statement	go to state 88
    break_statement	go to state 89
    expression	go to state 90
    simple_expression	go to state 91
    and_expression	go to state 92
    unary_relation_expression	go to state 93
    regular_expression	go to state 94
    sum_expression	go to state 95
    term	go to state 96
    factor	go to state 97
    mutable	go to state 98
    immutable	go to state 99
    call	go to state 100
    constant	go to state 101



state 65

    break_statement  ->  BREAK . ';'   (rule 118)

    ';' 	shift, and go to state 115



state 66

    printf_statement  ->  PRINTF . '(' string_constant printf_identifier_list ')' ';'   (rule 113)

    '(' 	shift, and go to state 116



state 67

    continue_statement  ->  CONTINUE . ';'   (rule 117)

    ';' 	shift, and go to state 117



state 68

    mutable  ->  identifier .   (rule 163)
    call  ->  identifier . '(' @10 arguments ')'   (rule 169)

    '(' 	shift, and go to state 118

    $default	reduce using rule 163 (mutable)



state 69

    array_random_access  ->  array_identifier . '[' array_random_access_breakup ']'   (rule 19)
    array_random_access  ->  array_identifier . '[' array_random_access_breakup ']' '[' array_random_access_breakup ']'   (rule 20)

    '[' 	shift, and go to state 119



state 70

    constant  ->  integer_constant .   (rule 177)

    $default	reduce using rule 177 (constant)



state 71

    constant  ->  string_constant .   (rule 178)

    $default	reduce using rule 178 (constant)



state 72

    constant  ->  float_constant .   (rule 179)

    $default	reduce using rule 179 (constant)



state 73

    constant  ->  character_constant .   (rule 180)

    $default	reduce using rule 180 (constant)



state 74

    unary_relation_expression  ->  exclamation_operator . unary_relation_expression   (rule 142)

    identifier	shift, and go to state 68
    array_identifier	shift, and go to state 69
    integer_constant	shift, and go to state 70
    string_constant	shift, and go to state 71
    float_constant	shift, and go to state 72
    character_constant	shift, and go to state 73
    exclamation_operator	shift, and go to state 74
    '(' 	shift, and go to state 76

    array_random_access	go to state 78
    unary_relation_expression	go to state 120
    regular_expression	go to state 94
    sum_expression	go to state 95
    term	go to state 96
    factor	go to state 97
    mutable	go to state 121
    immutable	go to state 99
    call	go to state 100
    constant	go to state 101



state 75

    expression_statment  ->  ';' .   (rule 100)

    $default	reduce using rule 100 (expression_statment)



state 76

    immutable  ->  '(' . expression ')'   (rule 165)

    identifier	shift, and go to state 68
    array_identifier	shift, and go to state 69
    integer_constant	shift, and go to state 70
    string_constant	shift, and go to state 71
    float_constant	shift, and go to state 72
    character_constant	shift, and go to state 73
    exclamation_operator	shift, and go to state 74
    '(' 	shift, and go to state 76

    array_random_access	go to state 78
    expression	go to state 122
    simple_expression	go to state 91
    and_expression	go to state 92
    unary_relation_expression	go to state 93
    regular_expression	go to state 94
    sum_expression	go to state 95
    term	go to state 96
    factor	go to state 97
    mutable	go to state 98
    immutable	go to state 99
    call	go to state 100
    constant	go to state 101



state 77

    statement  ->  variable_declaration .   (rule 93)

    $default	reduce using rule 93 (statement)



state 78

    mutable  ->  array_random_access .   (rule 164)

    $default	reduce using rule 164 (mutable)



state 79

    variable_declaration  ->  type_specifier . variable_declaration_list ';'   (rule 7)

    identifier	shift, and go to state 55
    array_identifier	shift, and go to state 31

    variable_declaration_list	go to state 32
    variable_declaration_identifier	go to state 33



state 80

    function_declaration_param_statement  ->  params ')' statement .   (rule 74)

    $default	reduce using rule 74 (function_declaration_param_statement)



state 81

    statement  ->  compound_statement .   (rule 87)

    $default	reduce using rule 87 (statement)



state 82

    compound_statement  ->  @5 . '{' statment_list '}'   (rule 96)

    '{' 	shift, and go to state 123



state 83

    statement  ->  expression_statment .   (rule 86)

    $default	reduce using rule 86 (statement)



state 84

    statement  ->  conditional_statements .   (rule 88)

    $default	reduce using rule 88 (statement)



state 85

    statement  ->  iterative_statements .   (rule 89)

    $default	reduce using rule 89 (statement)



state 86

    statement  ->  return_statement .   (rule 90)

    $default	reduce using rule 90 (statement)



state 87

    statement  ->  printf_statement .   (rule 94)

    $default	reduce using rule 94 (statement)



state 88

    statement  ->  continue_statement .   (rule 92)

    $default	reduce using rule 92 (statement)



state 89

    statement  ->  break_statement .   (rule 91)

    $default	reduce using rule 91 (statement)



state 90

    expression_statment  ->  expression . ';'   (rule 99)

    ';' 	shift, and go to state 124



state 91

    expression  ->  simple_expression .   (rule 137)
    simple_expression  ->  simple_expression . OR_operator and_expression   (rule 138)

    OR_operator	shift, and go to state 125

    $default	reduce using rule 137 (expression)



state 92

    simple_expression  ->  and_expression .   (rule 139)
    and_expression  ->  and_expression . AND_operator unary_relation_expression   (rule 140)

    AND_operator	shift, and go to state 126

    $default	reduce using rule 139 (simple_expression)



state 93

    and_expression  ->  unary_relation_expression .   (rule 141)

    $default	reduce using rule 141 (and_expression)



state 94

    unary_relation_expression  ->  regular_expression .   (rule 143)
    regular_expression  ->  regular_expression . relational_operators sum_expression   (rule 144)

    equality_operator	shift, and go to state 127
    inequality_operator	shift, and go to state 128
    lessthan_assignment_operator	shift, and go to state 129
    lessthan_operator	shift, and go to state 130
    greaterthan_assignment_operator	shift, and go to state 131
    greaterthan_operator	shift, and go to state 132

    $default	reduce using rule 143 (unary_relation_expression)

    relational_operators	go to state 133



state 95

    regular_expression  ->  sum_expression .   (rule 145)
    sum_expression  ->  sum_expression . sum_operators term   (rule 152)

    add_operator	shift, and go to state 134
    subtract_operator	shift, and go to state 135

    $default	reduce using rule 145 (regular_expression)

    sum_operators	go to state 136



state 96

    sum_expression  ->  term .   (rule 153)
    term  ->  term . MULOP factor   (rule 156)

    multiplication_operator	shift, and go to state 137
    division_operator	shift, and go to state 138
    modulo_operator	shift, and go to state 139

    $default	reduce using rule 153 (sum_expression)

    MULOP	go to state 140



state 97

    term  ->  factor .   (rule 157)

    $default	reduce using rule 157 (term)



state 98

    expression  ->  mutable . assignment_operator expression   (rule 129)
    expression  ->  mutable . addition_assignment_operator expression   (rule 130)
    expression  ->  mutable . subtraction_assignment_operator expression   (rule 131)
    expression  ->  mutable . multiplication_assignment_operator expression   (rule 132)
    expression  ->  mutable . division_assignment_operator expression   (rule 133)
    expression  ->  mutable . modulo_assignment_operator expression   (rule 134)
    expression  ->  mutable . increment_operator   (rule 135)
    expression  ->  mutable . decrement_operator   (rule 136)
    factor  ->  mutable .   (rule 162)

    modulo_assignment_operator	shift, and go to state 141
    multiplication_assignment_operator	shift, and go to state 142
    division_assignment_operator	shift, and go to state 143
    addition_assignment_operator	shift, and go to state 144
    subtraction_assignment_operator	shift, and go to state 145
    assignment_operator	shift, and go to state 146
    increment_operator	shift, and go to state 147
    decrement_operator	shift, and go to state 148

    $default	reduce using rule 162 (factor)



state 99

    factor  ->  immutable .   (rule 161)

    $default	reduce using rule 161 (factor)



state 100

    immutable  ->  call .   (rule 166)

    $default	reduce using rule 166 (immutable)



state 101

    immutable  ->  constant .   (rule 167)

    $default	reduce using rule 167 (immutable)



state 102

    vdi  ->  assignment_operator expression .   (rule 17)

    $default	reduce using rule 17 (vdi)



state 103

    identifier_twod_array_type  ->  '[' identifier . ']' '[' initialization_params_new   (rule 27)

    ']' 	shift, and go to state 149



state 104

    identifier_twod_array_type  ->  '[' integer_constant . ']' '[' initialization_params_new   (rule 26)

    ']' 	shift, and go to state 150



state 105

    identifier_twod_array_type  ->  '[' ']' . '[' initialization_params_new   (rule 28)

    '[' 	shift, and go to state 151



state 106

    param_identifier  ->  identifier @4 . param_identifier_breakup   (rule 83)

    '[' 	shift, and go to state 152

    $default	reduce using rule 85 (param_identifier_breakup)

    param_identifier_breakup	go to state 153



state 107

    parameters_identifier_list_breakup  ->  ',' . parameters_list   (rule 80)

    INT 	shift, and go to state 1
    CHAR	shift, and go to state 2
    FLOAT	shift, and go to state 3
    DOUBLE	shift, and go to state 4
    LONG	shift, and go to state 5
    SHORT	shift, and go to state 6
    SIGNED	shift, and go to state 7
    UNSIGNED	shift, and go to state 8
    VOID	shift, and go to state 9

    type_specifier	go to state 34
    parameters_list	go to state 154



state 108

    parameters_identifier_list  ->  param_identifier parameters_identifier_list_breakup .   (rule 79)

    $default	reduce using rule 79 (parameters_identifier_list)



state 109

    conditional_statements  ->  IF '(' . simple_expression ')' @6 statement conditional_statements_breakup   (rule 102)

    identifier	shift, and go to state 68
    array_identifier	shift, and go to state 69
    integer_constant	shift, and go to state 70
    string_constant	shift, and go to state 71
    float_constant	shift, and go to state 72
    character_constant	shift, and go to state 73
    exclamation_operator	shift, and go to state 74
    '(' 	shift, and go to state 76

    array_random_access	go to state 78
    simple_expression	go to state 155
    and_expression	go to state 92
    unary_relation_expression	go to state 93
    regular_expression	go to state 94
    sum_expression	go to state 95
    term	go to state 96
    factor	go to state 97
    mutable	go to state 121
    immutable	go to state 99
    call	go to state 100
    constant	go to state 101



state 110

    return_statement  ->  RETURN ';' .   (rule 111)

    $default	reduce using rule 111 (return_statement)



state 111

    return_statement  ->  RETURN expression . ';'   (rule 112)

    ';' 	shift, and go to state 156



state 112

    iterative_statements  ->  WHILE '(' . simple_expression ')' @7 statement   (rule 106)

    identifier	shift, and go to state 68
    array_identifier	shift, and go to state 69
    integer_constant	shift, and go to state 70
    string_constant	shift, and go to state 71
    float_constant	shift, and go to state 72
    character_constant	shift, and go to state 73
    exclamation_operator	shift, and go to state 74
    '(' 	shift, and go to state 76

    array_random_access	go to state 78
    simple_expression	go to state 157
    and_expression	go to state 92
    unary_relation_expression	go to state 93
    regular_expression	go to state 94
    sum_expression	go to state 95
    term	go to state 96
    factor	go to state 97
    mutable	go to state 121
    immutable	go to state 99
    call	go to state 100
    constant	go to state 101



state 113

    iterative_statements  ->  FOR '(' . expression ';' simple_expression ';' @8 expression ')'   (rule 108)

    identifier	shift, and go to state 68
    array_identifier	shift, and go to state 69
    integer_constant	shift, and go to state 70
    string_constant	shift, and go to state 71
    float_constant	shift, and go to state 72
    character_constant	shift, and go to state 73
    exclamation_operator	shift, and go to state 74
    '(' 	shift, and go to state 76

    array_random_access	go to state 78
    expression	go to state 158
    simple_expression	go to state 91
    and_expression	go to state 92
    unary_relation_expression	go to state 93
    regular_expression	go to state 94
    sum_expression	go to state 95
    term	go to state 96
    factor	go to state 97
    mutable	go to state 98
    immutable	go to state 99
    call	go to state 100
    constant	go to state 101



state 114

    iterative_statements  ->  DO statement . WHILE '(' simple_expression ')' @9 ';'   (rule 110)

    WHILE	shift, and go to state 159



state 115

    break_statement  ->  BREAK ';' .   (rule 118)

    $default	reduce using rule 118 (break_statement)



state 116

    printf_statement  ->  PRINTF '(' . string_constant printf_identifier_list ')' ';'   (rule 113)

    string_constant	shift, and go to state 160



state 117

    continue_statement  ->  CONTINUE ';' .   (rule 117)

    $default	reduce using rule 117 (continue_statement)



state 118

    call  ->  identifier '(' . @10 arguments ')'   (rule 169)

    $default	reduce using rule 168 (@10)

    @10 	go to state 161



state 119

    array_random_access  ->  array_identifier '[' . array_random_access_breakup ']'   (rule 19)
    array_random_access  ->  array_identifier '[' . array_random_access_breakup ']' '[' array_random_access_breakup ']'   (rule 20)

    identifier	shift, and go to state 162
    array_identifier	shift, and go to state 69
    integer_constant	shift, and go to state 163
    string_constant	shift, and go to state 71
    float_constant	shift, and go to state 72
    character_constant	shift, and go to state 73
    exclamation_operator	shift, and go to state 74
    '(' 	shift, and go to state 76

    array_random_access	go to state 164
    array_random_access_breakup	go to state 165
    expression	go to state 166
    simple_expression	go to state 91
    and_expression	go to state 92
    unary_relation_expression	go to state 93
    regular_expression	go to state 94
    sum_expression	go to state 95
    term	go to state 96
    factor	go to state 97
    mutable	go to state 98
    immutable	go to state 99
    call	go to state 100
    constant	go to state 101



state 120

    unary_relation_expression  ->  exclamation_operator unary_relation_expression .   (rule 142)

    $default	reduce using rule 142 (unary_relation_expression)



state 121

    factor  ->  mutable .   (rule 162)

    $default	reduce using rule 162 (factor)



state 122

    immutable  ->  '(' expression . ')'   (rule 165)

    ')' 	shift, and go to state 167



state 123

    compound_statement  ->  @5 '{' . statment_list '}'   (rule 96)

    IF  	shift, and go to state 60
    INT 	shift, and go to state 1
    CHAR	shift, and go to state 2
    FLOAT	shift, and go to state 3
    DOUBLE	shift, and go to state 4
    LONG	shift, and go to state 5
    SHORT	shift, and go to state 6
    SIGNED	shift, and go to state 7
    UNSIGNED	shift, and go to state 8
    RETURN	shift, and go to state 61
    VOID	shift, and go to state 9
    WHILE	shift, and go to state 62
    FOR 	shift, and go to state 63
    DO  	shift, and go to state 64
    BREAK	shift, and go to state 65
    PRINTF	shift, and go to state 66
    CONTINUE	shift, and go to state 67
    identifier	shift, and go to state 68
    array_identifier	shift, and go to state 69
    integer_constant	shift, and go to state 70
    string_constant	shift, and go to state 71
    float_constant	shift, and go to state 72
    character_constant	shift, and go to state 73
    exclamation_operator	shift, and go to state 74
    ';' 	shift, and go to state 75
    '(' 	shift, and go to state 76

    $default	reduce using rule 95 (@5)

    variable_declaration	go to state 77
    array_random_access	go to state 78
    type_specifier	go to state 79
    statement	go to state 168
    compound_statement	go to state 81
    @5  	go to state 82
    statment_list	go to state 169
    expression_statment	go to state 83
    conditional_statements	go to state 84
    iterative_statements	go to state 85
    return_statement	go to state 86
    printf_statement	go to state 87
    continue_statement	go to state 88
    break_statement	go to state 89
    expression	go to state 90
    simple_expression	go to state 91
    and_expression	go to state 92
    unary_relation_expression	go to state 93
    regular_expression	go to state 94
    sum_expression	go to state 95
    term	go to state 96
    factor	go to state 97
    mutable	go to state 98
    immutable	go to state 99
    call	go to state 100
    constant	go to state 101



state 124

    expression_statment  ->  expression ';' .   (rule 99)

    $default	reduce using rule 99 (expression_statment)



state 125

    simple_expression  ->  simple_expression OR_operator . and_expression   (rule 138)

    identifier	shift, and go to state 68
    array_identifier	shift, and go to state 69
    integer_constant	shift, and go to state 70
    string_constant	shift, and go to state 71
    float_constant	shift, and go to state 72
    character_constant	shift, and go to state 73
    exclamation_operator	shift, and go to state 74
    '(' 	shift, and go to state 76

    array_random_access	go to state 78
    and_expression	go to state 170
    unary_relation_expression	go to state 93
    regular_expression	go to state 94
    sum_expression	go to state 95
    term	go to state 96
    factor	go to state 97
    mutable	go to state 121
    immutable	go to state 99
    call	go to state 100
    constant	go to state 101



state 126

    and_expression  ->  and_expression AND_operator . unary_relation_expression   (rule 140)

    identifier	shift, and go to state 68
    array_identifier	shift, and go to state 69
    integer_constant	shift, and go to state 70
    string_constant	shift, and go to state 71
    float_constant	shift, and go to state 72
    character_constant	shift, and go to state 73
    exclamation_operator	shift, and go to state 74
    '(' 	shift, and go to state 76

    array_random_access	go to state 78
    unary_relation_expression	go to state 171
    regular_expression	go to state 94
    sum_expression	go to state 95
    term	go to state 96
    factor	go to state 97
    mutable	go to state 121
    immutable	go to state 99
    call	go to state 100
    constant	go to state 101



state 127

    relational_operators  ->  equality_operator .   (rule 150)

    $default	reduce using rule 150 (relational_operators)



state 128

    relational_operators  ->  inequality_operator .   (rule 151)

    $default	reduce using rule 151 (relational_operators)



state 129

    relational_operators  ->  lessthan_assignment_operator .   (rule 147)

    $default	reduce using rule 147 (relational_operators)



state 130

    relational_operators  ->  lessthan_operator .   (rule 149)

    $default	reduce using rule 149 (relational_operators)



state 131

    relational_operators  ->  greaterthan_assignment_operator .   (rule 146)

    $default	reduce using rule 146 (relational_operators)



state 132

    relational_operators  ->  greaterthan_operator .   (rule 148)

    $default	reduce using rule 148 (relational_operators)



state 133

    regular_expression  ->  regular_expression relational_operators . sum_expression   (rule 144)

    identifier	shift, and go to state 68
    array_identifier	shift, and go to state 69
    integer_constant	shift, and go to state 70
    string_constant	shift, and go to state 71
    float_constant	shift, and go to state 72
    character_constant	shift, and go to state 73
    '(' 	shift, and go to state 76

    array_random_access	go to state 78
    sum_expression	go to state 172
    term	go to state 96
    factor	go to state 97
    mutable	go to state 121
    immutable	go to state 99
    call	go to state 100
    constant	go to state 101



state 134

    sum_operators  ->  add_operator .   (rule 154)

    $default	reduce using rule 154 (sum_operators)



state 135

    sum_operators  ->  subtract_operator .   (rule 155)

    $default	reduce using rule 155 (sum_operators)



state 136

    sum_expression  ->  sum_expression sum_operators . term   (rule 152)

    identifier	shift, and go to state 68
    array_identifier	shift, and go to state 69
    integer_constant	shift, and go to state 70
    string_constant	shift, and go to state 71
    float_constant	shift, and go to state 72
    character_constant	shift, and go to state 73
    '(' 	shift, and go to state 76

    array_random_access	go to state 78
    term	go to state 173
    factor	go to state 97
    mutable	go to state 121
    immutable	go to state 99
    call	go to state 100
    constant	go to state 101



state 137

    MULOP  ->  multiplication_operator .   (rule 158)

    $default	reduce using rule 158 (MULOP)



state 138

    MULOP  ->  division_operator .   (rule 159)

    $default	reduce using rule 159 (MULOP)



state 139

    MULOP  ->  modulo_operator .   (rule 160)

    $default	reduce using rule 160 (MULOP)



state 140

    term  ->  term MULOP . factor   (rule 156)

    identifier	shift, and go to state 68
    array_identifier	shift, and go to state 69
    integer_constant	shift, and go to state 70
    string_constant	shift, and go to state 71
    float_constant	shift, and go to state 72
    character_constant	shift, and go to state 73
    '(' 	shift, and go to state 76

    array_random_access	go to state 78
    factor	go to state 174
    mutable	go to state 121
    immutable	go to state 99
    call	go to state 100
    constant	go to state 101



state 141

    expression  ->  mutable modulo_assignment_operator . expression   (rule 134)

    identifier	shift, and go to state 68
    array_identifier	shift, and go to state 69
    integer_constant	shift, and go to state 70
    string_constant	shift, and go to state 71
    float_constant	shift, and go to state 72
    character_constant	shift, and go to state 73
    exclamation_operator	shift, and go to state 74
    '(' 	shift, and go to state 76

    array_random_access	go to state 78
    expression	go to state 175
    simple_expression	go to state 91
    and_expression	go to state 92
    unary_relation_expression	go to state 93
    regular_expression	go to state 94
    sum_expression	go to state 95
    term	go to state 96
    factor	go to state 97
    mutable	go to state 98
    immutable	go to state 99
    call	go to state 100
    constant	go to state 101



state 142

    expression  ->  mutable multiplication_assignment_operator . expression   (rule 132)

    identifier	shift, and go to state 68
    array_identifier	shift, and go to state 69
    integer_constant	shift, and go to state 70
    string_constant	shift, and go to state 71
    float_constant	shift, and go to state 72
    character_constant	shift, and go to state 73
    exclamation_operator	shift, and go to state 74
    '(' 	shift, and go to state 76

    array_random_access	go to state 78
    expression	go to state 176
    simple_expression	go to state 91
    and_expression	go to state 92
    unary_relation_expression	go to state 93
    regular_expression	go to state 94
    sum_expression	go to state 95
    term	go to state 96
    factor	go to state 97
    mutable	go to state 98
    immutable	go to state 99
    call	go to state 100
    constant	go to state 101



state 143

    expression  ->  mutable division_assignment_operator . expression   (rule 133)

    identifier	shift, and go to state 68
    array_identifier	shift, and go to state 69
    integer_constant	shift, and go to state 70
    string_constant	shift, and go to state 71
    float_constant	shift, and go to state 72
    character_constant	shift, and go to state 73
    exclamation_operator	shift, and go to state 74
    '(' 	shift, and go to state 76

    array_random_access	go to state 78
    expression	go to state 177
    simple_expression	go to state 91
    and_expression	go to state 92
    unary_relation_expression	go to state 93
    regular_expression	go to state 94
    sum_expression	go to state 95
    term	go to state 96
    factor	go to state 97
    mutable	go to state 98
    immutable	go to state 99
    call	go to state 100
    constant	go to state 101



state 144

    expression  ->  mutable addition_assignment_operator . expression   (rule 130)

    identifier	shift, and go to state 68
    array_identifier	shift, and go to state 69
    integer_constant	shift, and go to state 70
    string_constant	shift, and go to state 71
    float_constant	shift, and go to state 72
    character_constant	shift, and go to state 73
    exclamation_operator	shift, and go to state 74
    '(' 	shift, and go to state 76

    array_random_access	go to state 78
    expression	go to state 178
    simple_expression	go to state 91
    and_expression	go to state 92
    unary_relation_expression	go to state 93
    regular_expression	go to state 94
    sum_expression	go to state 95
    term	go to state 96
    factor	go to state 97
    mutable	go to state 98
    immutable	go to state 99
    call	go to state 100
    constant	go to state 101



state 145

    expression  ->  mutable subtraction_assignment_operator . expression   (rule 131)

    identifier	shift, and go to state 68
    array_identifier	shift, and go to state 69
    integer_constant	shift, and go to state 70
    string_constant	shift, and go to state 71
    float_constant	shift, and go to state 72
    character_constant	shift, and go to state 73
    exclamation_operator	shift, and go to state 74
    '(' 	shift, and go to state 76

    array_random_access	go to state 78
    expression	go to state 179
    simple_expression	go to state 91
    and_expression	go to state 92
    unary_relation_expression	go to state 93
    regular_expression	go to state 94
    sum_expression	go to state 95
    term	go to state 96
    factor	go to state 97
    mutable	go to state 98
    immutable	go to state 99
    call	go to state 100
    constant	go to state 101



state 146

    expression  ->  mutable assignment_operator . expression   (rule 129)

    identifier	shift, and go to state 68
    array_identifier	shift, and go to state 69
    integer_constant	shift, and go to state 70
    string_constant	shift, and go to state 71
    float_constant	shift, and go to state 72
    character_constant	shift, and go to state 73
    exclamation_operator	shift, and go to state 74
    '(' 	shift, and go to state 76

    array_random_access	go to state 78
    expression	go to state 180
    simple_expression	go to state 91
    and_expression	go to state 92
    unary_relation_expression	go to state 93
    regular_expression	go to state 94
    sum_expression	go to state 95
    term	go to state 96
    factor	go to state 97
    mutable	go to state 98
    immutable	go to state 99
    call	go to state 100
    constant	go to state 101



state 147

    expression  ->  mutable increment_operator .   (rule 135)

    $default	reduce using rule 135 (expression)



state 148

    expression  ->  mutable decrement_operator .   (rule 136)

    $default	reduce using rule 136 (expression)



state 149

    identifier_twod_array_type  ->  '[' identifier ']' . '[' initialization_params_new   (rule 27)

    '[' 	shift, and go to state 181



state 150

    identifier_twod_array_type  ->  '[' integer_constant ']' . '[' initialization_params_new   (rule 26)

    '[' 	shift, and go to state 182



state 151

    identifier_twod_array_type  ->  '[' ']' '[' . initialization_params_new   (rule 28)

    identifier	shift, and go to state 183
    integer_constant	shift, and go to state 184

    initialization_params_new	go to state 185
    initialization_params_2d	go to state 186



state 152

    param_identifier_breakup  ->  '[' . ']'   (rule 84)

    ']' 	shift, and go to state 187



state 153

    param_identifier  ->  identifier @4 param_identifier_breakup .   (rule 83)

    $default	reduce using rule 83 (param_identifier)



state 154

    parameters_identifier_list_breakup  ->  ',' parameters_list .   (rule 80)

    $default	reduce using rule 80 (parameters_identifier_list_breakup)



state 155

    conditional_statements  ->  IF '(' simple_expression . ')' @6 statement conditional_statements_breakup   (rule 102)
    simple_expression  ->  simple_expression . OR_operator and_expression   (rule 138)

    OR_operator	shift, and go to state 125
    ')' 	shift, and go to state 188



state 156

    return_statement  ->  RETURN expression ';' .   (rule 112)

    $default	reduce using rule 112 (return_statement)



state 157

    iterative_statements  ->  WHILE '(' simple_expression . ')' @7 statement   (rule 106)
    simple_expression  ->  simple_expression . OR_operator and_expression   (rule 138)

    OR_operator	shift, and go to state 125
    ')' 	shift, and go to state 189



state 158

    iterative_statements  ->  FOR '(' expression . ';' simple_expression ';' @8 expression ')'   (rule 108)

    ';' 	shift, and go to state 190



state 159

    iterative_statements  ->  DO statement WHILE . '(' simple_expression ')' @9 ';'   (rule 110)

    '(' 	shift, and go to state 191



state 160

    printf_statement  ->  PRINTF '(' string_constant . printf_identifier_list ')' ';'   (rule 113)

    ',' 	shift, and go to state 192

    $default	reduce using rule 116 (printf_identifier_list)

    printf_identifier_list	go to state 193



state 161

    call  ->  identifier '(' @10 . arguments ')'   (rule 169)

    identifier	shift, and go to state 68
    array_identifier	shift, and go to state 69
    integer_constant	shift, and go to state 70
    string_constant	shift, and go to state 71
    float_constant	shift, and go to state 72
    character_constant	shift, and go to state 73
    exclamation_operator	shift, and go to state 74
    '(' 	shift, and go to state 76

    $default	reduce using rule 171 (arguments)

    array_random_access	go to state 78
    expression	go to state 194
    simple_expression	go to state 91
    and_expression	go to state 92
    unary_relation_expression	go to state 93
    regular_expression	go to state 94
    sum_expression	go to state 95
    term	go to state 96
    factor	go to state 97
    mutable	go to state 98
    immutable	go to state 99
    call	go to state 100
    arguments	go to state 195
    arguments_list	go to state 196
    constant	go to state 101



state 162

    array_random_access_breakup  ->  identifier .   (rule 22)
    mutable  ->  identifier .   (rule 163)
    call  ->  identifier . '(' @10 arguments ')'   (rule 169)

    '(' 	shift, and go to state 118

    $default	reduce using rule 163 (mutable)



state 163

    array_random_access_breakup  ->  integer_constant .   (rule 21)
    constant  ->  integer_constant .   (rule 177)

    $default	reduce using rule 177 (constant)



state 164

    array_random_access_breakup  ->  array_random_access .   (rule 23)
    mutable  ->  array_random_access .   (rule 164)

    $default	reduce using rule 164 (mutable)



state 165

    array_random_access  ->  array_identifier '[' array_random_access_breakup . ']'   (rule 19)
    array_random_access  ->  array_identifier '[' array_random_access_breakup . ']' '[' array_random_access_breakup ']'   (rule 20)

    ']' 	shift, and go to state 197



state 166

    array_random_access_breakup  ->  expression .   (rule 24)

    $default	reduce using rule 24 (array_random_access_breakup)



state 167

    immutable  ->  '(' expression ')' .   (rule 165)

    $default	reduce using rule 165 (immutable)



state 168

    statment_list  ->  statement . statment_list   (rule 97)

    IF  	shift, and go to state 60
    INT 	shift, and go to state 1
    CHAR	shift, and go to state 2
    FLOAT	shift, and go to state 3
    DOUBLE	shift, and go to state 4
    LONG	shift, and go to state 5
    SHORT	shift, and go to state 6
    SIGNED	shift, and go to state 7
    UNSIGNED	shift, and go to state 8
    RETURN	shift, and go to state 61
    VOID	shift, and go to state 9
    WHILE	shift, and go to state 62
    FOR 	shift, and go to state 63
    DO  	shift, and go to state 64
    BREAK	shift, and go to state 65
    PRINTF	shift, and go to state 66
    CONTINUE	shift, and go to state 67
    identifier	shift, and go to state 68
    array_identifier	shift, and go to state 69
    integer_constant	shift, and go to state 70
    string_constant	shift, and go to state 71
    float_constant	shift, and go to state 72
    character_constant	shift, and go to state 73
    exclamation_operator	shift, and go to state 74
    ';' 	shift, and go to state 75
    '(' 	shift, and go to state 76

    $default	reduce using rule 95 (@5)

    variable_declaration	go to state 77
    array_random_access	go to state 78
    type_specifier	go to state 79
    statement	go to state 168
    compound_statement	go to state 81
    @5  	go to state 82
    statment_list	go to state 198
    expression_statment	go to state 83
    conditional_statements	go to state 84
    iterative_statements	go to state 85
    return_statement	go to state 86
    printf_statement	go to state 87
    continue_statement	go to state 88
    break_statement	go to state 89
    expression	go to state 90
    simple_expression	go to state 91
    and_expression	go to state 92
    unary_relation_expression	go to state 93
    regular_expression	go to state 94
    sum_expression	go to state 95
    term	go to state 96
    factor	go to state 97
    mutable	go to state 98
    immutable	go to state 99
    call	go to state 100
    constant	go to state 101



state 169

    compound_statement  ->  @5 '{' statment_list . '}'   (rule 96)

    '}' 	shift, and go to state 199



state 170

    simple_expression  ->  simple_expression OR_operator and_expression .   (rule 138)
    and_expression  ->  and_expression . AND_operator unary_relation_expression   (rule 140)

    AND_operator	shift, and go to state 126

    $default	reduce using rule 138 (simple_expression)



state 171

    and_expression  ->  and_expression AND_operator unary_relation_expression .   (rule 140)

    $default	reduce using rule 140 (and_expression)



state 172

    regular_expression  ->  regular_expression relational_operators sum_expression .   (rule 144)
    sum_expression  ->  sum_expression . sum_operators term   (rule 152)

    add_operator	shift, and go to state 134
    subtract_operator	shift, and go to state 135

    $default	reduce using rule 144 (regular_expression)

    sum_operators	go to state 136



state 173

    sum_expression  ->  sum_expression sum_operators term .   (rule 152)
    term  ->  term . MULOP factor   (rule 156)

    multiplication_operator	shift, and go to state 137
    division_operator	shift, and go to state 138
    modulo_operator	shift, and go to state 139

    $default	reduce using rule 152 (sum_expression)

    MULOP	go to state 140



state 174

    term  ->  term MULOP factor .   (rule 156)

    $default	reduce using rule 156 (term)



state 175

    expression  ->  mutable modulo_assignment_operator expression .   (rule 134)

    $default	reduce using rule 134 (expression)



state 176

    expression  ->  mutable multiplication_assignment_operator expression .   (rule 132)

    $default	reduce using rule 132 (expression)



state 177

    expression  ->  mutable division_assignment_operator expression .   (rule 133)

    $default	reduce using rule 133 (expression)



state 178

    expression  ->  mutable addition_assignment_operator expression .   (rule 130)

    $default	reduce using rule 130 (expression)



state 179

    expression  ->  mutable subtraction_assignment_operator expression .   (rule 131)

    $default	reduce using rule 131 (expression)



state 180

    expression  ->  mutable assignment_operator expression .   (rule 129)

    $default	reduce using rule 129 (expression)



state 181

    identifier_twod_array_type  ->  '[' identifier ']' '[' . initialization_params_new   (rule 27)

    identifier	shift, and go to state 183
    integer_constant	shift, and go to state 184

    initialization_params_new	go to state 200
    initialization_params_2d	go to state 186



state 182

    identifier_twod_array_type  ->  '[' integer_constant ']' '[' . initialization_params_new   (rule 26)

    identifier	shift, and go to state 183
    integer_constant	shift, and go to state 184

    initialization_params_new	go to state 201
    initialization_params_2d	go to state 186



state 183

    initialization_params_2d  ->  identifier .   (rule 32)

    $default	reduce using rule 32 (initialization_params_2d)



state 184

    initialization_params_2d  ->  integer_constant .   (rule 31)

    $default	reduce using rule 31 (initialization_params_2d)



state 185

    identifier_twod_array_type  ->  '[' ']' '[' initialization_params_new .   (rule 28)

    $default	reduce using rule 28 (identifier_twod_array_type)



state 186

    initialization_params_new  ->  initialization_params_2d . ']' initialization_2d   (rule 29)
    initialization_params_new  ->  initialization_params_2d . ']'   (rule 30)

    ']' 	shift, and go to state 202



state 187

    param_identifier_breakup  ->  '[' ']' .   (rule 84)

    $default	reduce using rule 84 (param_identifier_breakup)



state 188

    conditional_statements  ->  IF '(' simple_expression ')' . @6 statement conditional_statements_breakup   (rule 102)

    $default	reduce using rule 101 (@6)

    @6  	go to state 203



state 189

    iterative_statements  ->  WHILE '(' simple_expression ')' . @7 statement   (rule 106)

    $default	reduce using rule 105 (@7)

    @7  	go to state 204



state 190

    iterative_statements  ->  FOR '(' expression ';' . simple_expression ';' @8 expression ')'   (rule 108)

    identifier	shift, and go to state 68
    array_identifier	shift, and go to state 69
    integer_constant	shift, and go to state 70
    string_constant	shift, and go to state 71
    float_constant	shift, and go to state 72
    character_constant	shift, and go to state 73
    exclamation_operator	shift, and go to state 74
    '(' 	shift, and go to state 76

    array_random_access	go to state 78
    simple_expression	go to state 205
    and_expression	go to state 92
    unary_relation_expression	go to state 93
    regular_expression	go to state 94
    sum_expression	go to state 95
    term	go to state 96
    factor	go to state 97
    mutable	go to state 121
    immutable	go to state 99
    call	go to state 100
    constant	go to state 101



state 191

    iterative_statements  ->  DO statement WHILE '(' . simple_expression ')' @9 ';'   (rule 110)

    identifier	shift, and go to state 68
    array_identifier	shift, and go to state 69
    integer_constant	shift, and go to state 70
    string_constant	shift, and go to state 71
    float_constant	shift, and go to state 72
    character_constant	shift, and go to state 73
    exclamation_operator	shift, and go to state 74
    '(' 	shift, and go to state 76

    array_random_access	go to state 78
    simple_expression	go to state 206
    and_expression	go to state 92
    unary_relation_expression	go to state 93
    regular_expression	go to state 94
    sum_expression	go to state 95
    term	go to state 96
    factor	go to state 97
    mutable	go to state 121
    immutable	go to state 99
    call	go to state 100
    constant	go to state 101



state 192

    printf_identifier_list  ->  ',' . identifier printf_identifier_list   (rule 114)
    printf_identifier_list  ->  ',' . array_random_access printf_identifier_list   (rule 115)

    identifier	shift, and go to state 207
    array_identifier	shift, and go to state 69

    array_random_access	go to state 208



state 193

    printf_statement  ->  PRINTF '(' string_constant printf_identifier_list . ')' ';'   (rule 113)

    ')' 	shift, and go to state 209



state 194

    arguments_list  ->  expression . @11 A   (rule 173)

    $default	reduce using rule 172 (@11)

    @11 	go to state 210



state 195

    call  ->  identifier '(' @10 arguments . ')'   (rule 169)

    ')' 	shift, and go to state 211



state 196

    arguments  ->  arguments_list .   (rule 170)

    $default	reduce using rule 170 (arguments)



state 197

    array_random_access  ->  array_identifier '[' array_random_access_breakup ']' .   (rule 19)
    array_random_access  ->  array_identifier '[' array_random_access_breakup ']' . '[' array_random_access_breakup ']'   (rule 20)

    '[' 	shift, and go to state 212

    $default	reduce using rule 19 (array_random_access)



state 198

    statment_list  ->  statement statment_list .   (rule 97)

    $default	reduce using rule 97 (statment_list)



state 199

    compound_statement  ->  @5 '{' statment_list '}' .   (rule 96)

    $default	reduce using rule 96 (compound_statement)



state 200

    identifier_twod_array_type  ->  '[' identifier ']' '[' initialization_params_new .   (rule 27)

    $default	reduce using rule 27 (identifier_twod_array_type)



state 201

    identifier_twod_array_type  ->  '[' integer_constant ']' '[' initialization_params_new .   (rule 26)

    $default	reduce using rule 26 (identifier_twod_array_type)



state 202

    initialization_params_new  ->  initialization_params_2d ']' . initialization_2d   (rule 29)
    initialization_params_new  ->  initialization_params_2d ']' .   (rule 30)

    assignment_operator	shift, and go to state 213

    $default	reduce using rule 30 (initialization_params_new)

    initialization_2d	go to state 214



state 203

    conditional_statements  ->  IF '(' simple_expression ')' @6 . statement conditional_statements_breakup   (rule 102)

    IF  	shift, and go to state 60
    INT 	shift, and go to state 1
    CHAR	shift, and go to state 2
    FLOAT	shift, and go to state 3
    DOUBLE	shift, and go to state 4
    LONG	shift, and go to state 5
    SHORT	shift, and go to state 6
    SIGNED	shift, and go to state 7
    UNSIGNED	shift, and go to state 8
    RETURN	shift, and go to state 61
    VOID	shift, and go to state 9
    WHILE	shift, and go to state 62
    FOR 	shift, and go to state 63
    DO  	shift, and go to state 64
    BREAK	shift, and go to state 65
    PRINTF	shift, and go to state 66
    CONTINUE	shift, and go to state 67
    identifier	shift, and go to state 68
    array_identifier	shift, and go to state 69
    integer_constant	shift, and go to state 70
    string_constant	shift, and go to state 71
    float_constant	shift, and go to state 72
    character_constant	shift, and go to state 73
    exclamation_operator	shift, and go to state 74
    ';' 	shift, and go to state 75
    '(' 	shift, and go to state 76

    $default	reduce using rule 95 (@5)

    variable_declaration	go to state 77
    array_random_access	go to state 78
    type_specifier	go to state 79
    statement	go to state 215
    compound_statement	go to state 81
    @5  	go to state 82
    expression_statment	go to state 83
    conditional_statements	go to state 84
    iterative_statements	go to state 85
    return_statement	go to state 86
    printf_statement	go to state 87
    continue_statement	go to state 88
    break_statement	go to state 89
    expression	go to state 90
    simple_expression	go to state 91
    and_expression	go to state 92
    unary_relation_expression	go to state 93
    regular_expression	go to state 94
    sum_expression	go to state 95
    term	go to state 96
    factor	go to state 97
    mutable	go to state 98
    immutable	go to state 99
    call	go to state 100
    constant	go to state 101



state 204

    iterative_statements  ->  WHILE '(' simple_expression ')' @7 . statement   (rule 106)

    IF  	shift, and go to state 60
    INT 	shift, and go to state 1
    CHAR	shift, and go to state 2
    FLOAT	shift, and go to state 3
    DOUBLE	shift, and go to state 4
    LONG	shift, and go to state 5
    SHORT	shift, and go to state 6
    SIGNED	shift, and go to state 7
    UNSIGNED	shift, and go to state 8
    RETURN	shift, and go to state 61
    VOID	shift, and go to state 9
    WHILE	shift, and go to state 62
    FOR 	shift, and go to state 63
    DO  	shift, and go to state 64
    BREAK	shift, and go to state 65
    PRINTF	shift, and go to state 66
    CONTINUE	shift, and go to state 67
    identifier	shift, and go to state 68
    array_identifier	shift, and go to state 69
    integer_constant	shift, and go to state 70
    string_constant	shift, and go to state 71
    float_constant	shift, and go to state 72
    character_constant	shift, and go to state 73
    exclamation_operator	shift, and go to state 74
    ';' 	shift, and go to state 75
    '(' 	shift, and go to state 76

    $default	reduce using rule 95 (@5)

    variable_declaration	go to state 77
    array_random_access	go to state 78
    type_specifier	go to state 79
    statement	go to state 216
    compound_statement	go to state 81
    @5  	go to state 82
    expression_statment	go to state 83
    conditional_statements	go to state 84
    iterative_statements	go to state 85
    return_statement	go to state 86
    printf_statement	go to state 87
    continue_statement	go to state 88
    break_statement	go to state 89
    expression	go to state 90
    simple_expression	go to state 91
    and_expression	go to state 92
    unary_relation_expression	go to state 93
    regular_expression	go to state 94
    sum_expression	go to state 95
    term	go to state 96
    factor	go to state 97
    mutable	go to state 98
    immutable	go to state 99
    call	go to state 100
    constant	go to state 101



state 205

    iterative_statements  ->  FOR '(' expression ';' simple_expression . ';' @8 expression ')'   (rule 108)
    simple_expression  ->  simple_expression . OR_operator and_expression   (rule 138)

    OR_operator	shift, and go to state 125
    ';' 	shift, and go to state 217



state 206

    iterative_statements  ->  DO statement WHILE '(' simple_expression . ')' @9 ';'   (rule 110)
    simple_expression  ->  simple_expression . OR_operator and_expression   (rule 138)

    OR_operator	shift, and go to state 125
    ')' 	shift, and go to state 218



state 207

    printf_identifier_list  ->  ',' identifier . printf_identifier_list   (rule 114)

    ',' 	shift, and go to state 192

    $default	reduce using rule 116 (printf_identifier_list)

    printf_identifier_list	go to state 219



state 208

    printf_identifier_list  ->  ',' array_random_access . printf_identifier_list   (rule 115)

    ',' 	shift, and go to state 192

    $default	reduce using rule 116 (printf_identifier_list)

    printf_identifier_list	go to state 220



state 209

    printf_statement  ->  PRINTF '(' string_constant printf_identifier_list ')' . ';'   (rule 113)

    ';' 	shift, and go to state 221



state 210

    arguments_list  ->  expression @11 . A   (rule 173)

    ',' 	shift, and go to state 222

    $default	reduce using rule 176 (A)

    A   	go to state 223



state 211

    call  ->  identifier '(' @10 arguments ')' .   (rule 169)

    $default	reduce using rule 169 (call)



state 212

    array_random_access  ->  array_identifier '[' array_random_access_breakup ']' '[' . array_random_access_breakup ']'   (rule 20)

    identifier	shift, and go to state 162
    array_identifier	shift, and go to state 69
    integer_constant	shift, and go to state 163
    string_constant	shift, and go to state 71
    float_constant	shift, and go to state 72
    character_constant	shift, and go to state 73
    exclamation_operator	shift, and go to state 74
    '(' 	shift, and go to state 76

    array_random_access	go to state 164
    array_random_access_breakup	go to state 224
    expression	go to state 166
    simple_expression	go to state 91
    and_expression	go to state 92
    unary_relation_expression	go to state 93
    regular_expression	go to state 94
    sum_expression	go to state 95
    term	go to state 96
    factor	go to state 97
    mutable	go to state 98
    immutable	go to state 99
    call	go to state 100
    constant	go to state 101



state 213

    initialization_2d  ->  assignment_operator . '{' array_init_int_2d '}'   (rule 39)
    initialization_2d  ->  assignment_operator . '{' array_init_float_2d '}'   (rule 40)
    initialization_2d  ->  assignment_operator . '{' array_init_string_2d '}'   (rule 41)

    '{' 	shift, and go to state 225



state 214

    initialization_params_new  ->  initialization_params_2d ']' initialization_2d .   (rule 29)

    $default	reduce using rule 29 (initialization_params_new)



state 215

    conditional_statements  ->  IF '(' simple_expression ')' @6 statement . conditional_statements_breakup   (rule 102)

    ELSE	shift, and go to state 226

    ELSE	[reduce using rule 104 (conditional_statements_breakup)]
    $default	reduce using rule 104 (conditional_statements_breakup)

    conditional_statements_breakup	go to state 227



state 216

    iterative_statements  ->  WHILE '(' simple_expression ')' @7 statement .   (rule 106)

    $default	reduce using rule 106 (iterative_statements)



state 217

    iterative_statements  ->  FOR '(' expression ';' simple_expression ';' . @8 expression ')'   (rule 108)

    $default	reduce using rule 107 (@8)

    @8  	go to state 228



state 218

    iterative_statements  ->  DO statement WHILE '(' simple_expression ')' . @9 ';'   (rule 110)

    $default	reduce using rule 109 (@9)

    @9  	go to state 229



state 219

    printf_identifier_list  ->  ',' identifier printf_identifier_list .   (rule 114)

    $default	reduce using rule 114 (printf_identifier_list)



state 220

    printf_identifier_list  ->  ',' array_random_access printf_identifier_list .   (rule 115)

    $default	reduce using rule 115 (printf_identifier_list)



state 221

    printf_statement  ->  PRINTF '(' string_constant printf_identifier_list ')' ';' .   (rule 113)

    $default	reduce using rule 113 (printf_statement)



state 222

    A  ->  ',' . expression @12 A   (rule 175)

    identifier	shift, and go to state 68
    array_identifier	shift, and go to state 69
    integer_constant	shift, and go to state 70
    string_constant	shift, and go to state 71
    float_constant	shift, and go to state 72
    character_constant	shift, and go to state 73
    exclamation_operator	shift, and go to state 74
    '(' 	shift, and go to state 76

    array_random_access	go to state 78
    expression	go to state 230
    simple_expression	go to state 91
    and_expression	go to state 92
    unary_relation_expression	go to state 93
    regular_expression	go to state 94
    sum_expression	go to state 95
    term	go to state 96
    factor	go to state 97
    mutable	go to state 98
    immutable	go to state 99
    call	go to state 100
    constant	go to state 101



state 223

    arguments_list  ->  expression @11 A .   (rule 173)

    $default	reduce using rule 173 (arguments_list)



state 224

    array_random_access  ->  array_identifier '[' array_random_access_breakup ']' '[' array_random_access_breakup . ']'   (rule 20)

    ']' 	shift, and go to state 231



state 225

    initialization_2d  ->  assignment_operator '{' . array_init_int_2d '}'   (rule 39)
    initialization_2d  ->  assignment_operator '{' . array_init_float_2d '}'   (rule 40)
    initialization_2d  ->  assignment_operator '{' . array_init_string_2d '}'   (rule 41)

    integer_constant	shift, and go to state 232
    string_constant	shift, and go to state 233
    float_constant	shift, and go to state 234
    '{' 	shift, and go to state 235

    array_init_int_2d	go to state 236
    array_init_float_2d	go to state 237
    array_init_string_2d	go to state 238



state 226

    conditional_statements_breakup  ->  ELSE . statement   (rule 103)

    IF  	shift, and go to state 60
    INT 	shift, and go to state 1
    CHAR	shift, and go to state 2
    FLOAT	shift, and go to state 3
    DOUBLE	shift, and go to state 4
    LONG	shift, and go to state 5
    SHORT	shift, and go to state 6
    SIGNED	shift, and go to state 7
    UNSIGNED	shift, and go to state 8
    RETURN	shift, and go to state 61
    VOID	shift, and go to state 9
    WHILE	shift, and go to state 62
    FOR 	shift, and go to state 63
    DO  	shift, and go to state 64
    BREAK	shift, and go to state 65
    PRINTF	shift, and go to state 66
    CONTINUE	shift, and go to state 67
    identifier	shift, and go to state 68
    array_identifier	shift, and go to state 69
    integer_constant	shift, and go to state 70
    string_constant	shift, and go to state 71
    float_constant	shift, and go to state 72
    character_constant	shift, and go to state 73
    exclamation_operator	shift, and go to state 74
    ';' 	shift, and go to state 75
    '(' 	shift, and go to state 76

    $default	reduce using rule 95 (@5)

    variable_declaration	go to state 77
    array_random_access	go to state 78
    type_specifier	go to state 79
    statement	go to state 239
    compound_statement	go to state 81
    @5  	go to state 82
    expression_statment	go to state 83
    conditional_statements	go to state 84
    iterative_statements	go to state 85
    return_statement	go to state 86
    printf_statement	go to state 87
    continue_statement	go to state 88
    break_statement	go to state 89
    expression	go to state 90
    simple_expression	go to state 91
    and_expression	go to state 92
    unary_relation_expression	go to state 93
    regular_expression	go to state 94
    sum_expression	go to state 95
    term	go to state 96
    factor	go to state 97
    mutable	go to state 98
    immutable	go to state 99
    call	go to state 100
    constant	go to state 101



state 227

    conditional_statements  ->  IF '(' simple_expression ')' @6 statement conditional_statements_breakup .   (rule 102)

    $default	reduce using rule 102 (conditional_statements)



state 228

    iterative_statements  ->  FOR '(' expression ';' simple_expression ';' @8 . expression ')'   (rule 108)

    identifier	shift, and go to state 68
    array_identifier	shift, and go to state 69
    integer_constant	shift, and go to state 70
    string_constant	shift, and go to state 71
    float_constant	shift, and go to state 72
    character_constant	shift, and go to state 73
    exclamation_operator	shift, and go to state 74
    '(' 	shift, and go to state 76

    array_random_access	go to state 78
    expression	go to state 240
    simple_expression	go to state 91
    and_expression	go to state 92
    unary_relation_expression	go to state 93
    regular_expression	go to state 94
    sum_expression	go to state 95
    term	go to state 96
    factor	go to state 97
    mutable	go to state 98
    immutable	go to state 99
    call	go to state 100
    constant	go to state 101



state 229

    iterative_statements  ->  DO statement WHILE '(' simple_expression ')' @9 . ';'   (rule 110)

    ';' 	shift, and go to state 241



state 230

    A  ->  ',' expression . @12 A   (rule 175)

    $default	reduce using rule 174 (@12)

    @12 	go to state 242



state 231

    array_random_access  ->  array_identifier '[' array_random_access_breakup ']' '[' array_random_access_breakup ']' .   (rule 20)

    $default	reduce using rule 20 (array_random_access)



state 232

    array_init_int_2d  ->  integer_constant .   (rule 44)
    array_init_float_2d  ->  integer_constant .   (rule 47)

    $default	reduce using rule 44 (array_init_int_2d)



state 233

    array_init_string_2d  ->  string_constant . ',' array_init_string_2d   (rule 49)
    array_init_string_2d  ->  string_constant .   (rule 50)

    ',' 	shift, and go to state 243

    $default	reduce using rule 50 (array_init_string_2d)



state 234

    array_init_float_2d  ->  float_constant .   (rule 48)

    $default	reduce using rule 48 (array_init_float_2d)



state 235

    array_init_int_2d  ->  '{' . array_int_declarations '}' ',' array_init_int_2d   (rule 42)
    array_init_int_2d  ->  '{' . array_int_declarations '}'   (rule 43)
    array_init_float_2d  ->  '{' . array_float_declarations '}' ',' array_init_float_2d   (rule 45)
    array_init_float_2d  ->  '{' . array_float_declarations '}'   (rule 46)

    integer_constant	shift, and go to state 244
    float_constant	shift, and go to state 245

    array_int_declarations	go to state 246
    array_float_declarations	go to state 247



state 236

    initialization_2d  ->  assignment_operator '{' array_init_int_2d . '}'   (rule 39)

    '}' 	shift, and go to state 248



state 237

    initialization_2d  ->  assignment_operator '{' array_init_float_2d . '}'   (rule 40)

    '}' 	shift, and go to state 249



state 238

    initialization_2d  ->  assignment_operator '{' array_init_string_2d . '}'   (rule 41)

    '}' 	shift, and go to state 250



state 239

    conditional_statements_breakup  ->  ELSE statement .   (rule 103)

    $default	reduce using rule 103 (conditional_statements_breakup)



state 240

    iterative_statements  ->  FOR '(' expression ';' simple_expression ';' @8 expression . ')'   (rule 108)

    ')' 	shift, and go to state 251



state 241

    iterative_statements  ->  DO statement WHILE '(' simple_expression ')' @9 ';' .   (rule 110)

    $default	reduce using rule 110 (iterative_statements)



state 242

    A  ->  ',' expression @12 . A   (rule 175)

    ',' 	shift, and go to state 222

    $default	reduce using rule 176 (A)

    A   	go to state 252



state 243

    array_init_string_2d  ->  string_constant ',' . array_init_string_2d   (rule 49)

    string_constant	shift, and go to state 233

    array_init_string_2d	go to state 253



state 244

    array_int_declarations  ->  integer_constant . array_int_declarations_breakup   (rule 122)
    array_float_declarations  ->  integer_constant . array_float_declarations_breakup   (rule 124)

    ',' 	shift, and go to state 254

    $default	reduce using rule 126 (array_int_declarations_breakup)

    array_int_declarations_breakup	go to state 255
    array_float_declarations_breakup	go to state 256



state 245

    array_float_declarations  ->  float_constant . array_float_declarations_breakup   (rule 123)

    ',' 	shift, and go to state 257

    $default	reduce using rule 128 (array_float_declarations_breakup)

    array_float_declarations_breakup	go to state 258



state 246

    array_init_int_2d  ->  '{' array_int_declarations . '}' ',' array_init_int_2d   (rule 42)
    array_init_int_2d  ->  '{' array_int_declarations . '}'   (rule 43)

    '}' 	shift, and go to state 259



state 247

    array_init_float_2d  ->  '{' array_float_declarations . '}' ',' array_init_float_2d   (rule 45)
    array_init_float_2d  ->  '{' array_float_declarations . '}'   (rule 46)

    '}' 	shift, and go to state 260



state 248

    initialization_2d  ->  assignment_operator '{' array_init_int_2d '}' .   (rule 39)

    $default	reduce using rule 39 (initialization_2d)



state 249

    initialization_2d  ->  assignment_operator '{' array_init_float_2d '}' .   (rule 40)

    $default	reduce using rule 40 (initialization_2d)



state 250

    initialization_2d  ->  assignment_operator '{' array_init_string_2d '}' .   (rule 41)

    $default	reduce using rule 41 (initialization_2d)



state 251

    iterative_statements  ->  FOR '(' expression ';' simple_expression ';' @8 expression ')' .   (rule 108)

    $default	reduce using rule 108 (iterative_statements)



state 252

    A  ->  ',' expression @12 A .   (rule 175)

    $default	reduce using rule 175 (A)



state 253

    array_init_string_2d  ->  string_constant ',' array_init_string_2d .   (rule 49)

    $default	reduce using rule 49 (array_init_string_2d)



state 254

    array_int_declarations_breakup  ->  ',' . array_int_declarations   (rule 125)
    array_float_declarations_breakup  ->  ',' . array_float_declarations   (rule 127)

    integer_constant	shift, and go to state 244
    float_constant	shift, and go to state 245

    array_int_declarations	go to state 261
    array_float_declarations	go to state 262



state 255

    array_int_declarations  ->  integer_constant array_int_declarations_breakup .   (rule 122)

    $default	reduce using rule 122 (array_int_declarations)



state 256

    array_float_declarations  ->  integer_constant array_float_declarations_breakup .   (rule 124)

    $default	reduce using rule 124 (array_float_declarations)



state 257

    array_float_declarations_breakup  ->  ',' . array_float_declarations   (rule 127)

    integer_constant	shift, and go to state 263
    float_constant	shift, and go to state 245

    array_float_declarations	go to state 262



state 258

    array_float_declarations  ->  float_constant array_float_declarations_breakup .   (rule 123)

    $default	reduce using rule 123 (array_float_declarations)



state 259

    array_init_int_2d  ->  '{' array_int_declarations '}' . ',' array_init_int_2d   (rule 42)
    array_init_int_2d  ->  '{' array_int_declarations '}' .   (rule 43)

    ',' 	shift, and go to state 264

    $default	reduce using rule 43 (array_init_int_2d)



state 260

    array_init_float_2d  ->  '{' array_float_declarations '}' . ',' array_init_float_2d   (rule 45)
    array_init_float_2d  ->  '{' array_float_declarations '}' .   (rule 46)

    ',' 	shift, and go to state 265

    $default	reduce using rule 46 (array_init_float_2d)



state 261

    array_int_declarations_breakup  ->  ',' array_int_declarations .   (rule 125)

    $default	reduce using rule 125 (array_int_declarations_breakup)



state 262

    array_float_declarations_breakup  ->  ',' array_float_declarations .   (rule 127)

    $default	reduce using rule 127 (array_float_declarations_breakup)



state 263

    array_float_declarations  ->  integer_constant . array_float_declarations_breakup   (rule 124)

    ',' 	shift, and go to state 257

    $default	reduce using rule 128 (array_float_declarations_breakup)

    array_float_declarations_breakup	go to state 256



state 264

    array_init_int_2d  ->  '{' array_int_declarations '}' ',' . array_init_int_2d   (rule 42)

    integer_constant	shift, and go to state 266
    '{' 	shift, and go to state 267

    array_init_int_2d	go to state 268



state 265

    array_init_float_2d  ->  '{' array_float_declarations '}' ',' . array_init_float_2d   (rule 45)

    integer_constant	shift, and go to state 269
    float_constant	shift, and go to state 234
    '{' 	shift, and go to state 270

    array_init_float_2d	go to state 271



state 266

    array_init_int_2d  ->  integer_constant .   (rule 44)

    $default	reduce using rule 44 (array_init_int_2d)



state 267

    array_init_int_2d  ->  '{' . array_int_declarations '}' ',' array_init_int_2d   (rule 42)
    array_init_int_2d  ->  '{' . array_int_declarations '}'   (rule 43)

    integer_constant	shift, and go to state 272

    array_int_declarations	go to state 246



state 268

    array_init_int_2d  ->  '{' array_int_declarations '}' ',' array_init_int_2d .   (rule 42)

    $default	reduce using rule 42 (array_init_int_2d)



state 269

    array_init_float_2d  ->  integer_constant .   (rule 47)

    $default	reduce using rule 47 (array_init_float_2d)



state 270

    array_init_float_2d  ->  '{' . array_float_declarations '}' ',' array_init_float_2d   (rule 45)
    array_init_float_2d  ->  '{' . array_float_declarations '}'   (rule 46)

    integer_constant	shift, and go to state 263
    float_constant	shift, and go to state 245

    array_float_declarations	go to state 247



state 271

    array_init_float_2d  ->  '{' array_float_declarations '}' ',' array_init_float_2d .   (rule 45)

    $default	reduce using rule 45 (array_init_float_2d)



state 272

    array_int_declarations  ->  integer_constant . array_int_declarations_breakup   (rule 122)

    ',' 	shift, and go to state 273

    $default	reduce using rule 126 (array_int_declarations_breakup)

    array_int_declarations_breakup	go to state 255



state 273

    array_int_declarations_breakup  ->  ',' . array_int_declarations   (rule 125)

    integer_constant	shift, and go to state 272

    array_int_declarations	go to state 261



state 274

    $   	go to state 275



state 275

    $   	go to state 276



state 276

    $default	accept
